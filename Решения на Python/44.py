# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-44. 
Решение на языке Python 3.
 Автор: Константин Поляков, 2013
E-mail: kpolyakov@mail.ru
   Web: kpolyakov.spb.ru
-------------------------------------------------
На электронную почту Вам пришло письмо, подписанное аббревиатурой
(первыми буквами фамилии, имени и отчества (далее - ФИО) отправителя).
Аббревиатура оказалась Вам незнакома. У Вас есть список всех
предполагаемых отправителей, взятый из ранее полученных писем, среди 
которых различных людей с такой аббревиатурой не больше 10.
Вам предлагается написать эффективную, в том числе по используемой 
памяти, программу (укажите используемую версию языка, например Borland
Pascal 7.0), которая определит всех вероятных адресатов – людей, ФИО
которых можно сократить до нужной аббревиатуры. ФИО следует выдать в
порядке убывания частоты их встречаемости в списке.
На вход программе в первой строке подается аббревиатура – строка,
состоящая из трех заглавных латинских букв. Во второй строке находится
число N – количество ФИО, полученных в результате анализа почты, не все 
из них подходят под указанную аббревиатуру. Значение N может быть очень
велико. В каждой из следующих N строк записано три слова: Фамилия Имя
Отчество соответствующего человека. Слова разделяются одним пробелом. В 
конце и в начале строки пробелов нет. Все слова записаны заглавными 
латинскими буквами. Длина ФИО не превышает 100 символов. Гарантируется, 
что хотя бы один человек с нужной аббревиатурой есть.
Пример входных данных:
    IPI
    4
    IVANOV PETR IVANOVICH
    PETROV IVAN IVANOVICH
    IVANOV PETR IVANOVICH
    ILYIN PETR ILYICH
Программа должна вывести предполагаемых отправителей письма с указанием 
частоты их встречаемости в списке (в порядке убывания частоты).
Пример выходных данных для приведенного выше примера входных данных:
    IVANOV PETR IVANOVICH 2
    ILYIN PETR ILYICH 1
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/44.in")

abbr = input()
N = int(input())
cnt = {}
for i in range(N):
    fio = input()
    fam, name, otch = fio.split()
    if fam[0]+name[0]+otch[0] == abbr:
        cnt[fio] = cnt.get(fio,0) + 1
cnt = sorted(cnt.items(), key = lambda x: x[1], reverse = True)
for x in cnt:
    print(x[0], x[1])

sys.stdin = save_stdin